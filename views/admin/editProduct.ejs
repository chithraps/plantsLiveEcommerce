<%- include('../partials/adminHeader') %>

    <head>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">

        <style>
            .card-header {
                background-color: rgb(66, 182, 105);
            }

            .h3-text {
                color: white;
            }

            .btn-class {
                background-color: rgb(66, 182, 105);
                color: white;
            }

            .btn-class:hover {
                background-color: rgb(25, 95, 48);
                color: white;

            }
            .image-preview-item {
                display: inline-block;
                margin: 5px;
            }

            .image-thumbnail {
                max-width: 100px;
                /* Adjust the maximum width as needed */
                max-height: 100px;
                /* Adjust the maximum height as needed */
            }
        </style>
    </head>
    <div class="container mt-5 mb-5 col">
        <div class="row justify-content-center ">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="text-center h3-text">Edit Product</h3>
                    </div>
                    <div class="card-body">
                        <form action="/admin/editProduct" method="POST" enctype="multipart/form-data" id="editProduct">
                            <div class="form-group">
                                <label for="name">Name:</label>
                                <input type="text" class="form-control" id="name" name="name"
                                    value="<%= product.name%>">
                                <div class="error" id="nameError" style="color: red;"></div>
                            </div>
                            <div class="form-group">
                                <label for="description">Description:</label>
                                <textarea class="form-control" id="description" name="description"
                                    rows="4"><%= product.description %></textarea>
                                <div class="error" id="descriptionError" style="color: red;"></div>
                            </div>
                            <div class="form-group">
                                <label for="price">Price:</label>
                                <input type="number" class="form-control" id="price" name="price"
                                    value="<%= product.price%>">
                                <div class="error" id="priceError" style="color: red;"></div>
                            </div>
                            <div id="cropModal" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%;
     background:rgba(0,0,0,0.8); justify-content:center; align-items:center; z-index:9999;">
    <div style="background:#fff; padding:20px; max-width:90%; max-height:90%;">
        <img id="cropImage" style="max-width:100%; max-height:80vh;" />
        <div style="margin-top:10px; text-align:center;">
            <button id="cropConfirm" type="button" class="btn btn-success">Crop & Add</button>
<button id="cropCancel" type="button" class="btn btn-secondary">Cancel</button>
        </div>
    </div>
</div>
                            <div id="image-preview" class="mt-3">
    <% if (product.images && product.images.length > 0) { %>
        <% product.images.forEach(function(img) { %>
            <div class="image-preview-item position-relative">
                <img src="<%= img %>" class="image-thumbnail" alt="Product image">

                <!-- Delete button -->
                <button type="button" class="btn btn-sm btn-danger position-absolute top-0 start-0 delete-existing"
                    data-img="<%= img %>">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        <% }) %>
    <% } %>
</div>

<!-- Hidden field to store deleted image names -->
<input type="hidden" name="deletedImages" id="deletedImages">
                            <div class="form-group">
                                <label for="images">Upload images:</label>
                                <input type="file" class="form-control" name="images" id="imageId" multiple>
                                <div class="error" id="imageError" style="color: red;"></div>
                            </div>

                            <div class="form-group">
                                <label for="category">Category:</label>
                                <select class="form-control" id="category" name="productCategory">
                                    <option value="" disabled selected>Select a category</option>
                                    <% categories.forEach(category=> { %>
                                        <option value="<%= category._id %>" <%= category._id.toString() === product.category.toString() ? 'selected' : '' %>>
    <%= category.name %>
</option>
                                        <% }); %>
                                </select>
                                <div class="error" id="dropdownError" style="color: red;"></div>
                            </div>
                            <div class="form-group">
                                <label for="name">Stock:</label>
                                <input type="number" class="form-control" id="stock" name="stock"
                                    value="<%= product.stock_count %>">
                                <div class="error" id="stockError" style="color: red;"></div>
                            </div>
                            <input type="hidden" name="id" value="<%= product._id %>">
                            <div class="error" id="stockError" style="color: red;"></div>
                            <div class="text-center mt-4 mb-4">
                                <button type="submit" class="btn btn-class">Submit</button>
                            </div>
                        </form>
                        <% if(typeof message!=='undefined' ){ %>
                            <p style="color: green;">
                                <%= message %>
                            </p>
                            <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="/path/to/sweetalert2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
    <script>
        const form = document.getElementById("editProduct")
        const imageInput = document.getElementById('imageId');
        const deletedImagesList = [];        
        const productImagesLength = <%= product.images.length %>;

document.querySelectorAll('.delete-existing').forEach(btn => {
    btn.addEventListener('click', function () {
        const imgPath = this.getAttribute('data-img');
        deletedImagesList.push(imgPath);

        
        document.getElementById('deletedImages').value = JSON.stringify(deletedImagesList);

        // Remove from preview
        this.parentElement.remove();
    });
});
let newFiles = [];
let cropper;
let currentFileIndex = 0;

imageInput.addEventListener("change", function () {
    const files = Array.from(this.files);
    if (files.length > 0) {
        handleCrop(files, 0);
    }
});

function handleCrop(files, index) {
    if (index >= files.length) {
        renderNewFiles();
        return;
    }

    const file = files[index];
    const reader = new FileReader();
    reader.onload = function (e) {
        const cropModal = document.getElementById('cropModal');
        const cropImage = document.getElementById('cropImage');

        cropImage.src = e.target.result;
        cropModal.style.display = 'flex';

        cropper = new Cropper(cropImage, {
            aspectRatio: 1,
            viewMode: 1
        });

        document.getElementById('cropConfirm').onclick = function () {
            cropper.getCroppedCanvas().toBlob(blob => {
                const croppedFile = new File([blob], file.name, { type: file.type });
                newFiles.push(croppedFile);
                const dt = new DataTransfer();
        newFiles.forEach(f => dt.items.add(f));
        imageInput.files = dt.files;
                cropper.destroy();
                cropModal.style.display = 'none';
                handleCrop(files, index + 1);
            });
        };

        document.getElementById('cropCancel').onclick = function () {
            newFiles.push(file); 
            cropper.destroy();
            cropModal.style.display = 'none';
            handleCrop(files, index + 1);
        };
    };
    reader.readAsDataURL(file);
}

function renderNewFiles() {
    
    document.querySelectorAll('.new-upload-preview').forEach(el => el.remove());

    newFiles.forEach((file, index) => {
        const reader = new FileReader();
        reader.onload = function (e) {
            const imageItem = document.createElement('div');
            imageItem.classList.add('image-preview-item', 'position-relative', 'new-upload-preview');

            const thumbnail = document.createElement('img');
            thumbnail.classList.add('image-thumbnail');
            thumbnail.src = e.target.result;
            thumbnail.alt = 'Preview';

            const removeButton = document.createElement('button');
            removeButton.classList.add('btn', 'btn-sm', 'btn-danger', 'position-absolute', 'top-0', 'start-0');
            removeButton.innerHTML = '<i class="fas fa-times"></i>';
            removeButton.addEventListener('click', function () {
                newFiles.splice(index, 1);
                renderNewFiles();
            });

            imageItem.appendChild(thumbnail);
            imageItem.appendChild(removeButton);
            imagePreview.appendChild(imageItem);
        };
        reader.readAsDataURL(file);
    });
}
        form.addEventListener('submit', e => {
            e.preventDefault();



            clearErrors();

            // Get input values
            // Build a new DataTransfer with remaining files
    const dt = new DataTransfer();
    
            const name = document.getElementById("name").value;
            const description = document.getElementById("description").value;
            const price = document.getElementById("price").value;


            const stock = document.getElementById('stock').value;

            const selectedFile = imageInput.files;
            const minChecked = 1; // Minimum number of checkboxes to be checked
            const dropdown = document.getElementById("category").value;
            if (name === "") {
                displayError("nameError", "Name cannot be empty");
                return;
            }

            if (description === "") {
                displayError("descriptionError", "description cannot be empty");
                return;
            }
            if (price === "" || price <= 0) {
                displayError("priceError", "Price cannot be empty");
                return;
            }

            if (stock === '' || stock <= 0) {
                displayError("stockError", "Stock cannot be empty");
                return false;
            }


            if (dropdown === '') {
                displayError("dropdownError", "Please select an option from the dropdown");
                return false;
            }

             if (
  selectedFile.length === 0 &&
  newFiles.length === 0 &&
  deletedImagesList.length === productImagesLength
) {
  return displayError("imageError", "Please select at least one image");
}

    // Only add cropped/new files if they exist
    newFiles.forEach(file => dt.items.add(file));
    imageInput.files = dt.files;





            form.submit();
        });

        function displayError(fieldId, errorMessage) {
            const errorSpan = document.getElementById(fieldId);
            errorSpan.textContent = errorMessage;
        }

        function clearErrors() {
            const errorSpans = document.querySelectorAll(".error");
            errorSpans.forEach(function (span) {
                span.textContent = "";
            });
        }
        const imagePreview = document.getElementById('image-preview');
        

        


    </script>
    <%- include('../partials/adminFooter') %>